package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

type AutoGenerated struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
	Data    []struct {
		Rank               int      `json:"rank"`
		GoodsName          string   `json:"goods_name"`
		Model              string   `json:"model"`
		DataID             []string `json:"data_id"`
		DataCount          int      `json:"data_count"`
		LabelCount         int      `json:"label_count"`
		DataPercentage     float64  `json:"data_percentage"`
		ContrastLastPeriod int      `json:"contrast_last_period"`
		OriginTime         string   `json:"origin_time"`
		Category           string   `json:"category"`
	} `json:"data"`
}

func main() {
	jsonBody := `{
        "start": "2022-01-22 00:00:00",
        "end": "2022-01-29 00:00:00",
        "timeword": "近7天",
        "level1_label": "产品体验",
        "goods_name": "",
        "level3_label": {
            "sentiment": "正面",
            "value": "便捷性"
        }
    }`
	for {
		for i := 0; i < 1000; i++ {
			go func(i int) {
				fmt.Println("当前的i值是", i)
				payload := strings.NewReader(jsonBody)
				res, err := http.Post("http://1.117.229.170:10001/user_feedback_level3_goods_list", "application/json", payload)

				// https://mholt.github.io/json-to-go/
				// 通过响应数据格式，根据上面的网站可直接获取结构体定义方便后续数据解析
				var u AutoGenerated
				data, err := ioutil.ReadAll(res.Body)
				if err != nil {
					fmt.Printf("请求失败")
					return
				}
				json.Unmarshal(data, &u)
				fmt.Println("响应状态码是", res.StatusCode, u.Data[0].DataID[0])
				time.Sleep(time.Second)
			}(i)

		}
		time.Sleep(time.Second * 2)
	}

}
